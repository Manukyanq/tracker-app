class Tracker{constructor({eStck:t,mxEStck:e,dbms:s,ready:i}){this.eStck=t,this.mxEStck=e,this.dbms=s,this.ready=i,setInterval(this.#a.bind(this),s)}#b(t){let[e,...s]=t,i=new Date,r={event:e,tags:s,ts:i,id:Math.random().toString(),url:document.URL,title:document.title};this.eStck.push(r),this.eStck.length>=this.mxEStck&&(this.ready=!0)}#c(){return new Promise((t,e)=>{var s=new XMLHttpRequest;s.open("POST","http://localhost:8001/track"),s.setRequestHeader("Content-Type","application/json"),s.send(JSON.stringify({trackEvents:this.eStck})),s.onload=()=>{t(s.status)},s.onerror=()=>{e("Something went really wrong")}})}#d(){let c=this.eStck.map(({id:t})=>t);this.#c().then(t=>{200===t&&(this.eStck=this.eStck.filter(t=>!c.includes(t.id)))}).catch(console.log)}#a(){this.eStck.length>0?this.#d():this.ready=!0}track(...t){this.#b(t),this.ready&&(this.#d(),this.ready=!1)}}let tracker=new Tracker({eStck:[],mxEStck:3,dbms:1e3,ready:!0});window.addEventListener("beforeunload",()=>tracker.track("unload"),{once:!0});